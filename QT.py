# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\QT.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication
from PyQt5.QtWidgets import QApplication, QDialog, QVBoxLayout, QLineEdit, QLabel, QPushButton
from GetCookiePart import CookieWindow
from JDSpiderPart import SpiderDialog
from businessPart import SearchableComboBoxWidget

from PyQt5.QtCore import QThread, pyqtSignal

#相应函数
class NetworkThread(QThread):
    finished = pyqtSignal()

    def __init__(self):
        super().__init__()

    def run(self):
        # 在这里执行网络请求的代码
        # 例如使用 requests 或者 aiohttp 库
        # 请求完成后发出信号表示完成
        self.finished.emit()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 20, 371, 200))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.GetCookie = QtWidgets.QPushButton(self.centralwidget)
        self.GetCookie.setObjectName("GetCookie")
        self.horizontalLayout.addWidget(self.GetCookie)

        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.horizontalLayout.addWidget(self.progressBar)

        # 将垂直布局1添加到水平布局中
        self.verticalLayout.addLayout(self.horizontalLayout)

        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)

        self.verticalLayout.addItem(spacerItem)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        # # 在水平布局中创建垂直布局2
        # self.verticalLayout2 = QtWidgets.QVBoxLayout()
        # self.verticalLayout2.setObjectName("verticalLayout2")

        self.JDCommodity = QtWidgets.QPushButton(self.centralwidget)
        self.JDCommodity.setObjectName("JDCommodity")
        # self.verticalLayout.addWidget(self.JDCommodity)

        self.horizontalLayout_2.addWidget(self.JDCommodity)

        self.progressBar_2 = QtWidgets.QProgressBar(self.verticalLayoutWidget)
        self.progressBar_2.setProperty("value", 0)
        self.progressBar_2.setObjectName("progressBar_2")
        self.horizontalLayout_2.addWidget(self.progressBar_2)
        self.verticalLayout.addLayout(self.horizontalLayout_2)


        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)

        self.helper = QtWidgets.QPushButton(self.centralwidget)
        self.helper.setObjectName("helper")
        self.helper.setFixedSize(100, 50)
        self.verticalLayout.addWidget(self.helper)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "电商小助手"))
        self.GetCookie.setText(_translate("MainWindow", "获取cookie"))
        self.JDCommodity.setText(_translate("MainWindow", "京东商品爬虫"))
        self.helper.setText(_translate("MainWindow", "商家助手"))
        self.menu.setTitle(_translate("MainWindow", "主页"))

    def connectSignal(self):#信号和槽进行绑定
        self.GetCookie.clicked.connect(self.GetCookie_clicked)  # Connect the clicked signal to b1_clicked
        self.progressBar.valueChanged.connect(self.on_progress_changed)  # Connect progress bar valueChanged signal
        self.JDCommodity.clicked.connect(self.JDCommodity_clicked)  # Connect the clicked signal to b1_clicked
        self.helper.clicked.connect(self.DataAnalysis)

    # def GetCookie_clicked(self):
    #     print("Button 1 clicked")
    #     self.progressBar.setValue(50)
    #     self.second_window = CookieWindow()
    #     self.second_window.exec_()
    #     self.progressBar.setValue(100)

    def GetCookie_clicked(self):
        print("Button 1 clicked")
        self.progressBar.setValue(50)

        # 创建并启动网络请求线程
        self.network_thread = NetworkThread()
        self.network_thread.finished.connect(self.Cookie_network_finished)
        self.network_thread.start()

    def Cookie_network_finished(self):
        # 网络请求完成后更新UI
        self.second_window = CookieWindow()
        self.second_window.show()
        self.progressBar.setValue(100)


    def JDCommodity_clicked(self):
        print("Button 2 clicked")
        self.progressBar_2.setValue(50)
        # 创建并启动网络请求线程
        self.network_thread = NetworkThread()
        self.network_thread.finished.connect(self.JD_network_finished)
        self.network_thread.start()

    def JD_network_finished(self):
        # 网络请求完成后更新UI
        self.JD = SpiderDialog()
        self.JD.show()
        self.progressBar.setValue(100)


    def on_progress_changed(self,value):
        print("Progress value changed to:", value)

    def DataAnalysis(self):
        self.network_thread = NetworkThread()
        self.network_thread.finished.connect(self.DATA_network_finished)
        self.network_thread.start()

    def DATA_network_finished(self):
        # 网络请求完成后更新UI
        self.widget = SearchableComboBoxWidget()
        self.widget.show()


class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.ui.connectSignal()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    # MainWindow = QtWidgets.QMainWindow()
    # ui = Ui_MainWindow()
    # ui.setupUi(MainWindow)
    # ui.connectSignal()
    # MainWindow.show()




    #最终窗口
    window = MainWindow()
    window.show()

    sys.exit(app.exec_())
