# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'competeAnalysis.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QApplication, QDialog, QVBoxLayout, QPushButton, QLabel
from PyQt5.QtCore import QObject, QThread, pyqtSignal
import time


class compareAnalysis_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(363, 447)
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(10)
        Dialog.setFont(font)
        self.startAnalysis = QtWidgets.QLabel(Dialog)
        self.startAnalysis.setGeometry(QtCore.QRect(110, 40, 121, 41))
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(20)
        self.startAnalysis.setFont(font)
        self.startAnalysis.setObjectName("startAnalysis")
        self.gridLayoutWidget = QtWidgets.QWidget(Dialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(40, 110, 300, 111))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 1)
        self.input1 = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.input1.setObjectName("input1")
        self.gridLayout.addWidget(self.input1, 0, 1, 1, 1)
        self.input2 = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.input2.setObjectName("input2")
        self.gridLayout.addWidget(self.input2, 1, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(120, 330, 101, 31))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(50, 240, 151, 16))
        self.label.setObjectName("label")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.pushButton.clicked.connect(self.detailInformation)
        Dialog.setStyleSheet("background-color: #ffffff ;")
        from PyQt5.QtGui import QIcon
        Dialog.setWindowIcon(QIcon("util/huohuo.png"))
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "好物对比"))
        self.startAnalysis.setText(_translate("Dialog", "好物对比"))
        self.label_2.setText(_translate("Dialog", "产品1"))
        self.label_3.setText(_translate("Dialog", "产品2"))
        self.pushButton.setText(_translate("Dialog", "开始分析"))
        self.label.setText(_translate("Dialog", "请输入商品的url"))

    def detailInformation(self):
        text1 = self.input1.text()
        text2 = self.input2.text()
        import re
        product_id1 = re.search(r'\d+', text1).group()
        product_id2 = re.search(r'\d+', text2).group()
        print(product_id1,product_id2)
        from threading import Thread
        #数据下载
        from GetInformationPart import commentSpider,GetBaseinformation
        # 创建 Thread 实例
        comment1 = commentSpider(product_id1)
        information1 = GetBaseinformation(product_id1)
        comment2 = commentSpider(product_id2)
        information2 = GetBaseinformation(product_id2)

        # 创建线程并设置目标函数及参数
        t1 = Thread(target=information1.analysis_page, args=(information1.get_page(), '第一个线程', 1))
        t2 = Thread(target=comment1.run, args=('第二个线程', 2))
        t3 = Thread(target=information2.analysis_page, args=(information2.get_page(), '第三个线程', 3))
        t4 = Thread(target=comment2.run, args=('第四个线程', 4))

        # 启动线程
        t1.start()
        t2.start()
        t3.start()
        t4.start()

        # 等待所有线程执行完毕
        t1.join()
        t2.join()
        t3.join()
        t4.join()

        print("数据下载完毕")

        from detailinformation4 import detailinformation_Dialog
        self.optimal_dialog = QDialog()
        ui = detailinformation_Dialog(product_id1, product_id2)
        ui.setupUi(self.optimal_dialog)
        ui.PicShow()
        self.optimal_dialog.exec_()

if __name__ == "__main__":
    QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)

    app = QApplication(sys.argv)

    # 创建一个 QDialog 对象来显示界面
    dialog = QDialog()

    # 使用 Sale_Form 类来设置界面
    ui = compareAnalysis_Dialog()
    ui.setupUi(dialog)

    # 显示对话框
    dialog.show()

    sys.exit(app.exec_())
