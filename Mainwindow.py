# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Mainwindows.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QMessageBox
from PyQt5.QtCore import QObject, QThread, pyqtSignal
import time
import sys
from PyQt5.QtWidgets import QApplication, QDialog
# 多线程工作类
class Worker(QObject):
    finished = pyqtSignal()

    def run(self):
        # 模拟耗时操作
        # time.sleep(2)
        self.finished.emit()

class Mainwindows(object):
    def setupUi(self, Form):
        # 窗体设置
        Form.setObjectName("Form")
        Form.resize(406, 300)
        Form.setMaximumSize(QtCore.QSize(406, 300))
        # 水平布局设置
        self.horizontalLayoutWidget = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(30, 140, 331, 51))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        # 按钮设置
        self.sale = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.sale.setObjectName("sale")
        self.horizontalLayout.addWidget(self.sale)
        self.buy = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.buy.setObjectName("buy")
        self.horizontalLayout.addWidget(self.buy)
        # 标签设置
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(10, 210, 391, 51))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(80, 30, 241, 41))

        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(28)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        # 界面初始化
        self.retranslateUi(Form)
        # 按钮连接信号槽
        self.buy.clicked.connect(self.show_buy)

        self.sale.clicked.connect(self.show_sale)
        # 设置样式表
        Form.setStyleSheet("background-color: #ffffff ;")
        from PyQt5.QtGui import QIcon
        Form.setWindowIcon(QIcon("util/huohuo.png"))

        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "AI Choice"))
        self.sale.setText(_translate("Form", "我是商家"))
        self.buy.setText(_translate("Form", "我是消费者"))
        self.label.setText(_translate("Form", "1.软件采用MIT协议进行开源\n"))
        self.label_2.setText(_translate("Form", "商品分析系统"))

    # def openBuyPageConnect(self):
    #     self.thread = QThread()
    #     self.worker = Worker()
    #     self.worker.moveToThread(self.thread)
    #     self.worker.finished.connect(self.show_buy)
    #     self.thread.started.connect(self.worker.run)
    #     self.thread.start()

    def open_second_window(self):
        # 创建一个线程来打开第二个窗口
        # self.worker = Worker()
        # self.thread = QThread()
        # self.worker.moveToThread(self.thread)
        # self.worker.finished.connect(self.show_sale)
        # self.thread.started.connect(self.worker.run)
        # self.thread.start()

        worker = Worker()
        thread = QThread()
        worker.moveToThread(thread)
        worker.finished.connect(self.show_second_window)
        thread.started.connect(worker.run)
        thread.start()

    def show_buy(self):
        from buy3 import Buy_Form

        # 在每次点击按钮时检查是否已经存在对话框对象，如果存在则直接显示，否则创建新的对话框对象
        # if not self.dialog:
        self.dialog = QDialog()

        # 使用 Sale_Form 类来设置界面
        ui = Buy_Form()
        ui.setupUi(self.dialog)

        # 显示对话框
        self.dialog.exec_()
        # sys.exit(app.exec_())

    def show_sale(self):

        from sale3 import Sale_Form
        # 在每次点击按钮时检查是否已经存在对话框对象，如果存在则直接显示，否则创建新的对话框对象
        # if not self.dialog:
        self.dialog = QDialog()

        # 使用 Sale_Form 类来设置界面
        ui = Sale_Form()
        ui.setupUi(self.dialog)

        # 显示对话框
        self.dialog.exec_()
        # sys.exit(app.exec_())

if __name__ == "__main__":
    import sys

    QtCore.QCoreApplication.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Mainwindows()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
